name: Run lighthouse

on:
    pull_request:
        branches: develope
    push:
        branches: develope

jobs:
    lighthouse:
        name: Lighthouse CI
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20.18.0'

            - name: Install dependencies
              run: yarn install

            - name: Build project
              run: yarn build

            - name: Run server & Lighthouse CI
              run: |
                  yarn preview & # Vite preview ÏÑúÎ≤Ñ Ïã§Ìñâ
                  sleep 10 # ÏÑúÎ≤Ñ ÏãúÏûë ÎåÄÍ∏∞
                  yarn dlx @lhci/cli autorun

            - name: Format lighthouse score
              id: format_lighthouse_score
              uses: actions/github-script@v3
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  script: |
                      const fs = require('fs');
                      const results = JSON.parse(fs.readFileSync("./lhci_reports/manifest.json"));
                      let comments = "";

                      results.forEach((result) => {
                        const { summary, jsonPath } = result;
                        const details = JSON.parse(fs.readFileSync(jsonPath));
                        const { audits } = details;

                        const formatResult = (res) => Math.round(res * 100);
                        Object.keys(summary).forEach(key => summary[key] = formatResult(summary[key]));

                        const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");

                        comments += [
                          `## ‚ö°Ô∏è Lighthouse Report`,
                          `| Category | Score |`,
                          `| --- | --- |`,
                          `| ${score(summary.performance)} Performance | ${summary.performance} |`,
                          `| ${score(summary.accessibility)} Accessibility | ${summary.accessibility} |`,
                          `| ${score(summary.seo)} SEO | ${summary.seo} |`,
                          `| ${score(summary['best-practices'])} Best Practices | ${summary['best-practices']} |`,
                          ``,
                          `### Metrics`,
                          `| Metric | Value |`,
                          `| --- | --- |`,
                          `| ${score(audits['first-contentful-paint'].score * 100)} First Contentful Paint | ${audits['first-contentful-paint'].displayValue} |`,
                          `| ${score(audits['largest-contentful-paint'].score * 100)} Largest Contentful Paint | ${audits['largest-contentful-paint'].displayValue} |`,
                          `| ${score(audits['cumulative-layout-shift'].score * 100)} Cumulative Layout Shift | ${audits['cumulative-layout-shift'].displayValue} |`,
                          ``,
                          `[üìä Full Report](${result.url})`,
                          `---`
                        ].join('\n');
                      });

                      core.setOutput('comments', comments);

            - name: Comment PR
              if: github.event_name == 'pull_request'
              uses: thollander/actions-comment-pull-request@v2
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  message: ${{ steps.format_lighthouse_score.outputs.comments }}
                  comment_tag: lighthouse
                  mode: recreate
